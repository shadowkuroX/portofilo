/* script.js ‚Äî mobile-first, clean style + Comments */
(() => {
  'use strict';

  const $  = (sel, root = document) => root.querySelector(sel);
  const $$ = (sel, root = document) => Array.from(root.querySelectorAll(sel));
  const setText = (id, value) => { const el = document.getElementById(id); if (el) el.textContent = value; };

  function placeSocialUnderAvatar() {
    const img = $('.container > img');
    const social = $('.social-box');
    if (img && social && img.nextElementSibling !== social) {
      img.insertAdjacentElement('afterend', social);
    }
  }

  function setupReveal() {
    const prefersReduced = window.matchMedia('(prefers-reduced-motion: reduce)').matches;
    const container = $('.container');
    if (!container) return;

    const step = Number(container.getAttribute('data-stagger')) || 120;
    const targets = $$('.reveal', container);
    targets.forEach((el, i) => el.style.setProperty('--d', `${i * step}ms`));

    if (prefersReduced) {
      targets.forEach(el => el.classList.add('show'));
      return;
    }

    const io = new IntersectionObserver((entries, obs) => {
      for (const entry of entries) {
        if (entry.isIntersecting) {
          entry.target.classList.add('show');
          obs.unobserve(entry.target);
        }
      }
    }, { threshold: 0.15, rootMargin: '0px 0px -10% 0px' });

    targets.forEach(el => io.observe(el));
  }

  const STRINGS = {
    kk: {
      siteTitle: 'Portfolio',
      name: '–°–∞–¥—ã–∂–∞–Ω –ï–ª–∞–º–∞–Ω',
      lblDob: '–¢—É“ì–∞–Ω –∫“Ø–Ω—ñ:',
      valDob: '29.09.2011',
      lblBirthplace: '–¢—É“ì–∞–Ω –∂–µ—Ä—ñ:',
      valBirthplace: '“ö–∞–∑–∞“õ—Å—Ç–∞–Ω, –ñ–µ—Ç—ñ—Å—É –æ–±–ª—ã—Å—ã, “Æ—à–∞—Ä–∞–ª –∞—É—ã–ª—ã',
      secInterests: '“ö—ã–∑—ã“ì—É—à—ã–ª—ã“õ—Ç–∞—Ä—ã–º',
      int1: 'üíª IT —Å–∞–ª–∞—Å—ã–Ω–¥–∞ –±–∞“ì–¥–∞—Ä–ª–∞–º–∞ –∫–æ–¥—Ç–∞—É',
      int2: 'üéÆ –ü–ö Roblox –æ–π–Ω–∞—É',
      secDream: '–ê—Ä–º–∞–Ω—ã–º',
      dream1: 'üåü ”®–∑ –æ—Ä–Ω—ã–º–¥—ã —Ç–∞—É—ã–ø, –∂–∞“õ—Å—ã IT –∫–æ–º–ø–∞–Ω–∏—è–¥–∞ —ñ—Å—Ç–µ—É',
      dream2: 'üìà IELTS 8.0-–¥–µ–Ω –∂–æ“ì–∞—Ä—ã –±–∞–ª –∂–∏–Ω–∞—É',
      dream3: 'üéì –ê–∑–∏—è –º–µ–Ω –ï—É—Ä–æ–ø–∞–Ω—ã“£ —Ç–æ–ø IT —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç—Ç–µ—Ä—ñ–Ω–µ —Ç“Ø—Å—É',
      secProjects: '–ñ–æ–±–∞–ª–∞—Ä—ã–º',
      proj1: 'üåê Vernox 2.0 –∞—Ç—Ç—ã —Å–∞–π—Ç',
      proj2: 'ü§ñ Telegram –±–æ—Ç',
      proj3: 'üñäÔ∏è –ü—Ä–æ–≥—Ä–∞–º–∞ C#',
      secSkills: '–ë—ñ–ª—ñ–º–¥–µ—Ä—ñ–º',
      skill1: 'üé® Figma',
      skill2: 'üî• FireBase',
      skill3: 'üêô GitHub',
      skill4: 'üíª Visual Studio',
      skill5: 'üü¶ Magica Voxel',
      skill6: 'üü• Magica CSG',
      skill7: 'ü§ñ Telegram –±–æ—Ç—ã –∂–∞—Å–∞—É',
      lblWhatsApp: 'WhatsApp',
      lblInstagram: 'Instagram',
      lblTelegram: '@elaamaan0',
      comments: {
        name: '–ê—Ç—ã“£',
        contact: '–ë–∞–π–ª–∞–Ω—ã—Å (—Ç–µ–ª/Telegram)',
        message: '–ü—ñ–∫—ñ—Ä—ñ“£',
        send: '–ñ—ñ–±–µ—Ä—É',
        sent: '–ü—ñ–∫—ñ—Ä—ñ“£—ñ–∑ –∂—ñ–±–µ—Ä—ñ–ª–¥—ñ! –†–∞“õ–º–µ—Ç üôå',
        error: '“ö–∞—Ç–µ –∫–µ—Ç—Ç—ñ. –ö–µ–π—ñ–Ω—ñ—Ä–µ–∫ –∫”©—Ä—ñ“£—ñ–∑.',
        rate: '–ñ—ñ–±–µ—Ä—É —Ç—ã–º –∂–∏—ñ. –ë—ñ—Ä–∞–∑–¥–∞–Ω —Å–æ“£ –±–∞–π“õ–∞–ø –∫”©—Ä—ñ“£—ñ–∑.',
        empty: '”ò–∑—ñ—Ä–≥–µ –ø—ñ–∫—ñ—Ä –∂–æ“õ.'
      }
    },
    en: {
      siteTitle: 'Portfolio',
      name: 'Sadyzhan Elaman',
      lblDob: 'Date of birth:',
      valDob: '29.09.2011',
      lblBirthplace: 'Birthplace:',
      valBirthplace: 'Kazakhstan, Zhetisu Region, Usharal village',
      secInterests: 'Interests',
      int1: 'üíª Programming in IT',
      int2: 'üéÆ Playing Roblox on PC',
      secDream: 'Goals',
      dream1: 'üåü Find my path and work at a great IT company',
      dream2: 'üìà Score 8.0+ on IELTS',
      dream3: 'üéì Enter top IT universities in Asia and Europe',
      secProjects: 'Projects',
      proj1: 'üåê Website "Vernox 2.0"',
      proj2: 'ü§ñ Telegram bot',
      proj3: 'üñäÔ∏è C# Program',
      secSkills: 'Skills',
      skill1: 'üé® Figma',
      skill2: 'üî• FireBase',
      skill3: 'üêô GitHub',
      skill4: 'üíª Visual Studio',
      skill5: 'üü¶ Magica Voxel',
      skill6: 'üü• Magica CSG',
      skill7: 'ü§ñ Creating Telegram bots',
      lblWhatsApp: 'WhatsApp',
      lblInstagram: 'Instagram',
      lblTelegram: '@elaamaan0',
      comments: {
        name: 'Your name',
        contact: 'Contact (phone/Telegram)',
        message: 'Message',
        send: 'Send',
        sent: 'Thanks! Your comment was sent üôå',
        error: 'Something went wrong. Try later.',
        rate: 'Too many attempts. Please wait a bit.',
        empty: 'No comments yet.'
      }
    }
  };

  function applyLang(lang) {
    const D = STRINGS[lang] || STRINGS.kk;

    document.title = D.siteTitle;
    setText('name', D.name);

    setText('lblDob', D.lblDob);
    setText('valDob', D.valDob);
    setText('lblBirthplace', D.lblBirthplace);
    setText('valBirthplace', D.valBirthplace);

    setText('secInterests', D.secInterests);
    setText('int1', D.int1);
    setText('int2', D.int2);

    setText('secDream', D.secDream);
    setText('dream1', D.dream1);
    setText('dream2', D.dream2);
    setText('dream3', D.dream3);

    setText('secProjects', D.secProjects);
    setText('proj1', D.proj1);
    setText('proj2', D.proj2);
    setText('proj3', D.proj3);

    // === –ñ–∞“£–∞ Skills –±”©–ª—ñ–º—ñ ===
    setText('secSkills', D.secSkills);
    setText('skill1', D.skill1);
    setText('skill2', D.skill2);
    setText('skill3', D.skill3);
    setText('skill4', D.skill4);
    setText('skill5', D.skill5);
    setText('skill6', D.skill6);
    setText('skill7', D.skill7);

    setText('lblWhatsApp', D.lblWhatsApp);
    setText('lblInstagram', D.lblInstagram);
    setText('lblTelegram', D.lblTelegram);

    const btn = $('.btn-send');
    if (btn) btn.textContent = D.comments.send;

    $$('.lang-btn').forEach(btn => {
      const pressed = btn.dataset.lang === lang;
      btn.setAttribute('aria-pressed', String(pressed));
    });

    localStorage.setItem('lang', lang);
  }

  function setupLangSwitcher() {
    const saved = localStorage.getItem('lang') || 'kk';
    applyLang(saved);
    $$('.lang-btn').forEach(btn => {
      btn.addEventListener('click', () => applyLang(btn.dataset.lang));
    });
  }

  // WhatsApp + Comments –∫–æ–¥—Ç–∞—Ä—ã“£ ”©–∑–≥–µ—Ä—ñ—Å—Å—ñ–∑ “õ–∞–ª–∞–¥—ã...

  document.addEventListener('DOMContentLoaded', () => {
    placeSocialUnderAvatar();
    setupReveal();
    setupLangSwitcher();
    setupWhatsAppLink();
    setupComments();
  });
})();
// 1) –ú–´–ù–ê–ù–´ ”®–ó Firebase config-–ø–µ–Ω —Ç–æ–ª—Ç—ã—Ä (Project settings ‚Üí Your apps (Web))
const firebaseConfig = {
  // apiKey: "....",
  // authDomain: "....firebaseapp.com",
  // projectId: "....",
  // storageBucket: "....appspot.com",
  // messagingSenderId: "...",
  // appId: "1:...:web:..."
};

// 2) Firebase —ñ—Å–∫–µ “õ–æ—Å—É
firebase.initializeApp(firebaseConfig);
const db = firebase.firestore();

// 3) –≠–ª–µ–º–µ–Ω—Ç—Ç–µ—Ä
const form = document.getElementById("commentForm");
const list = document.getElementById("commentsList");
const status = document.getElementById("formStatus");
const honeypot = document.getElementById("website"); // –∂–∞—Å—ã—Ä—ã–Ω ”©—Ä—ñ—Å –±–æ–ª—Å–∞ (—Å–ø–∞–º“ì–∞ “õ–∞—Ä—Å—ã)

// 4) –ü—ñ–∫—ñ—Ä–¥—ñ –∂–∞–∑—É
if (form) {
  form.addEventListener("submit", async (e) => {
    e.preventDefault();
    status && (status.textContent = "");

    if (honeypot && honeypot.value.trim() !== "") return; // –±–æ—Ç –±–æ–ª—Å–∞, —Ç–æ“õ—Ç–∞—Ç

    const name = (form.name?.value || "“ö–æ–Ω–∞“õ").trim();
    const message = (form.message?.value || "").trim();

    if (!message) {
      status && (status.textContent = "–ü—ñ–∫—ñ—Ä –µ–Ω–≥—ñ–∑—ñ“£—ñ–∑.");
      return;
    }
    if (message.length > 600) {
      status && (status.textContent = "–ú”ô—Ç—ñ–Ω —Ç—ã–º “±–∑—ã–Ω (‚â§600).");
      return;
    }

    try {
      await db.collection("comments").add({
        name,
        message,
        created: firebase.firestore.FieldValue.serverTimestamp(),
      });
      form.reset();
      status && (status.textContent = "–ü—ñ–∫—ñ—Ä—ñ“£—ñ–∑ –∂—ñ–±–µ—Ä—ñ–ª–¥—ñ! üôå");
    } catch (err) {
      console.error(err);
      status && (status.textContent = "“ö–∞—Ç–µ –∫–µ—Ç—Ç—ñ. –ö–µ–π—ñ–Ω—ñ—Ä–µ–∫ –∫”©—Ä—ñ“£—ñ–∑.");
    }
  });
}

// 5) Real-time –æ“õ—É (—Å–æ“£“ì—ã 20 –ø—ñ–∫—ñ—Ä)
if (list) {
  db.collection("comments")
    .orderBy("created", "desc")
    .limit(20)
    .onSnapshot((snap) => {
      list.innerHTML = "";
      if (snap.empty) {
        list.innerHTML = '<p class="muted">”ò–∑—ñ—Ä–≥–µ –ø—ñ–∫—ñ—Ä –∂–æ“õ.</p>';
        return;
      }
      snap.forEach((doc) => {
        const d = doc.data();
        const card = document.createElement("div");
        card.className = "comment-card";

        const head = document.createElement("div");
        head.className = "comment-head";

        const nm = document.createElement("strong");
        nm.className = "comment-name";
        nm.textContent = d.name || "–ê–Ω–æ–Ω–∏–º";

        const tm = document.createElement("span");
        tm.className = "comment-time";
        if (d.created && d.created.toDate) {
          tm.textContent = d.created.toDate().toLocaleString();
        }

        const body = document.createElement("p");
        body.className = "comment-text";
        body.textContent = d.message || "";

        head.appendChild(nm);
        head.appendChild(tm);
        card.appendChild(head);
        card.appendChild(body);
        list.appendChild(card);
      });
    });
}
